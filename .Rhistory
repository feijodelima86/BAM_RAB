LM_05<-lm(setdiff(mydata_miss_imp_05$ximp$As, mydata$As) ~ setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
summary(LM_05)
plot(setdiff(mydata_miss_imp_05$ximp$As, mydata$As), setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
sum(is.na(mydata_05$As))/length(mydata_05$As)
#write.csv(mydata_miss_imp$ximp, paste0("2_incremental/PCA_INPUT_TEST/",gsub("-", "", Sys.Date()),"completedata_SHOTGUN_ALL.csv"))
library("readr")
library("missMDA")
library("missForest")
#Shotgun
alldata <- read_csv("2_incremental/20220420_STANDING_CROP.csv")
alldata$SAMPLING_DATE<-as.Date(alldata$SAMPLING_DATE, format = "%m/%d/%Y")
names(alldata)
mydata <- data.frame(alldata[ ,c(3:49)])
mydata <- mydata[complete.cases(mydata), ]
mydata <- filter(mydata, FIELD.REP %in% c(1:5))
mydata$SITE <- as.factor(mydata$SITE)
mydata$SAMPLING_DATE <- as.numeric(mydata$SAMPLING_DATE)
mydata <- mydata[which(mydata$SAMPLE_DESCRIPTOR == "EPIL"| mydata$SAMPLE_DESCRIPTOR == "EPIP" | mydata$SAMPLE_DESCRIPTOR == "FILA"),]
mydata$SITE_DISTANCE <- as.numeric(str_replace_all(mydata$SITE, c("WS"="0","DL"="44.9","GR"="64.82","GC"="89.22","BG"="144.32","BN"="167.82")))
mydata$SAMPLE_DESCRIPTOR <- as.factor(mydata$SAMPLE_DESCRIPTOR)
mydata$FIELD.REP<- as.factor(mydata$FIELD.REP)
sum(is.na(mydata))/prod(dim(mydata))
names(mydata)
z_scores <- as.data.frame(sapply(mydata[,c(5:47)], function(mydata) (abs(mydata-mean(mydata))/sd(mydata))))
mydata <- mydata[!rowSums(z_scores>2.5), ]
mydata_05<-data.frame(mydata)
mydata_05$As <- replace(mydata_05$As , sample(seq_along(mydata_05$As), 35), NA)
#mydata_05 <- data.frame(sapply(mydata_05, \(x) replace(x, sample(seq_along(x), 3), NA)))
sum(is.na(mydata_05$As))/length(mydata_05$As)
mydata_miss_imp_05 <- missForest(mydata_05, xtrue = mydata, verbose = TRUE, replace = T)
mydata_miss_imp_05$ximp$As
setdiff(mydata_miss_imp_05$ximp$As, mydata$As)
setdiff(mydata$As, mydata_miss_imp_05$ximp$As)
LM_05<-lm(setdiff(mydata_miss_imp_05$ximp$As, mydata$As) ~ setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
summary(LM_05)
plot(setdiff(mydata_miss_imp_05$ximp$As, mydata$As), setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
sum(is.na(mydata_05$As))/length(mydata_05$As)
#write.csv(mydata_miss_imp$ximp, paste0("2_incremental/PCA_INPUT_TEST/",gsub("-", "", Sys.Date()),"completedata_SHOTGUN_ALL.csv"))
library("readr")
library("missMDA")
library("missForest")
#Shotgun
alldata <- read_csv("2_incremental/20220420_STANDING_CROP.csv")
alldata$SAMPLING_DATE<-as.Date(alldata$SAMPLING_DATE, format = "%m/%d/%Y")
names(alldata)
mydata <- data.frame(alldata[ ,c(3:49)])
mydata <- mydata[complete.cases(mydata), ]
mydata <- filter(mydata, FIELD.REP %in% c(1:5))
mydata$SITE <- as.factor(mydata$SITE)
mydata$SAMPLING_DATE <- as.numeric(mydata$SAMPLING_DATE)
mydata <- mydata[which(mydata$SAMPLE_DESCRIPTOR == "EPIL"| mydata$SAMPLE_DESCRIPTOR == "EPIP" | mydata$SAMPLE_DESCRIPTOR == "FILA"),]
mydata$SITE_DISTANCE <- as.numeric(str_replace_all(mydata$SITE, c("WS"="0","DL"="44.9","GR"="64.82","GC"="89.22","BG"="144.32","BN"="167.82")))
mydata$SAMPLE_DESCRIPTOR <- as.factor(mydata$SAMPLE_DESCRIPTOR)
mydata$FIELD.REP<- as.factor(mydata$FIELD.REP)
sum(is.na(mydata))/prod(dim(mydata))
names(mydata)
z_scores <- as.data.frame(sapply(mydata[,c(5:47)], function(mydata) (abs(mydata-mean(mydata))/sd(mydata))))
mydata <- mydata[!rowSums(z_scores>2.5), ]
mydata_05<-data.frame(mydata)
mydata_05$As <- replace(mydata_05$As , sample(seq_along(mydata_05$As), 35), NA)
#mydata_05 <- data.frame(sapply(mydata_05, \(x) replace(x, sample(seq_along(x), 3), NA)))
sum(is.na(mydata_05$As))/length(mydata_05$As)
mydata_miss_imp_05 <- missForest(mydata_05, xtrue = mydata, verbose = TRUE, replace = T)
mydata_miss_imp_05$ximp$As
setdiff(mydata_miss_imp_05$ximp$As, mydata$As)
setdiff(mydata$As, mydata_miss_imp_05$ximp$As)
LM_05<-lm(setdiff(mydata_miss_imp_05$ximp$As, mydata$As) ~ setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
summary(LM_05)
plot(setdiff(mydata_miss_imp_05$ximp$As, mydata$As), setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
sum(is.na(mydata_05$As))/length(mydata_05$As)
#write.csv(mydata_miss_imp$ximp, paste0("2_incremental/PCA_INPUT_TEST/",gsub("-", "", Sys.Date()),"completedata_SHOTGUN_ALL.csv"))
library("readr")
library("missMDA")
library("missForest")
#Shotgun
alldata <- read_csv("2_incremental/20220420_STANDING_CROP.csv")
alldata$SAMPLING_DATE<-as.Date(alldata$SAMPLING_DATE, format = "%m/%d/%Y")
names(alldata)
mydata <- data.frame(alldata[ ,c(3:49)])
mydata <- mydata[complete.cases(mydata), ]
mydata <- filter(mydata, FIELD.REP %in% c(1:5))
mydata$SITE <- as.factor(mydata$SITE)
mydata$SAMPLING_DATE <- as.numeric(mydata$SAMPLING_DATE)
mydata <- mydata[which(mydata$SAMPLE_DESCRIPTOR == "EPIL"| mydata$SAMPLE_DESCRIPTOR == "EPIP" | mydata$SAMPLE_DESCRIPTOR == "FILA"),]
mydata$SITE_DISTANCE <- as.numeric(str_replace_all(mydata$SITE, c("WS"="0","DL"="44.9","GR"="64.82","GC"="89.22","BG"="144.32","BN"="167.82")))
mydata$SAMPLE_DESCRIPTOR <- as.factor(mydata$SAMPLE_DESCRIPTOR)
mydata$FIELD.REP<- as.factor(mydata$FIELD.REP)
sum(is.na(mydata))/prod(dim(mydata))
names(mydata)
z_scores <- as.data.frame(sapply(mydata[,c(5:47)], function(mydata) (abs(mydata-mean(mydata))/sd(mydata))))
mydata <- mydata[!rowSums(z_scores>2.5), ]
mydata_05<-data.frame(mydata)
mydata_05$As <- replace(mydata_05$As , sample(seq_along(mydata_05$As), 35), NA)
#mydata_05 <- data.frame(sapply(mydata_05, \(x) replace(x, sample(seq_along(x), 3), NA)))
sum(is.na(mydata_05$As))/length(mydata_05$As)
mydata_miss_imp_05 <- missForest(mydata_05, xtrue = mydata, verbose = TRUE, replace = T)
mydata_miss_imp_05$ximp$As
setdiff(mydata_miss_imp_05$ximp$As, mydata$As)
setdiff(mydata$As, mydata_miss_imp_05$ximp$As)
LM_05<-lm(setdiff(mydata_miss_imp_05$ximp$As, mydata$As) ~ setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
summary(LM_05)
plot(setdiff(mydata_miss_imp_05$ximp$As, mydata$As), setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
sum(is.na(mydata_05$As))/length(mydata_05$As)
#write.csv(mydata_miss_imp$ximp, paste0("2_incremental/PCA_INPUT_TEST/",gsub("-", "", Sys.Date()),"completedata_SHOTGUN_ALL.csv"))
library("readr")
library("missMDA")
library("missForest")
#Shotgun
alldata <- read_csv("2_incremental/20220420_STANDING_CROP.csv")
alldata$SAMPLING_DATE<-as.Date(alldata$SAMPLING_DATE, format = "%m/%d/%Y")
names(alldata)
mydata <- data.frame(alldata[ ,c(3:49)])
mydata <- mydata[complete.cases(mydata), ]
mydata <- filter(mydata, FIELD.REP %in% c(1:5))
mydata$SITE <- as.factor(mydata$SITE)
mydata$SAMPLING_DATE <- as.numeric(mydata$SAMPLING_DATE)
mydata <- mydata[which(mydata$SAMPLE_DESCRIPTOR == "EPIL"| mydata$SAMPLE_DESCRIPTOR == "EPIP" | mydata$SAMPLE_DESCRIPTOR == "FILA"),]
mydata$SITE_DISTANCE <- as.numeric(str_replace_all(mydata$SITE, c("WS"="0","DL"="44.9","GR"="64.82","GC"="89.22","BG"="144.32","BN"="167.82")))
mydata$SAMPLE_DESCRIPTOR <- as.factor(mydata$SAMPLE_DESCRIPTOR)
mydata$FIELD.REP<- as.factor(mydata$FIELD.REP)
sum(is.na(mydata))/prod(dim(mydata))
names(mydata)
z_scores <- as.data.frame(sapply(mydata[,c(5:47)], function(mydata) (abs(mydata-mean(mydata))/sd(mydata))))
mydata <- mydata[!rowSums(z_scores>2.5), ]
mydata_05<-data.frame(mydata)
mydata_05$As <- replace(mydata_05$As , sample(seq_along(mydata_05$As), 35), NA)
#mydata_05 <- data.frame(sapply(mydata_05, \(x) replace(x, sample(seq_along(x), 3), NA)))
sum(is.na(mydata_05$As))/length(mydata_05$As)
mydata_miss_imp_05 <- missForest(mydata_05, xtrue = mydata, verbose = TRUE, replace = T)
mydata_miss_imp_05$ximp$As
setdiff(mydata_miss_imp_05$ximp$As, mydata$As)
setdiff(mydata$As, mydata_miss_imp_05$ximp$As)
LM_05<-lm(setdiff(mydata_miss_imp_05$ximp$As, mydata$As) ~ setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
summary(LM_05)
plot(setdiff(mydata_miss_imp_05$ximp$As, mydata$As), setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
sum(is.na(mydata_05$As))/length(mydata_05$As)
#write.csv(mydata_miss_imp$ximp, paste0("2_incremental/PCA_INPUT_TEST/",gsub("-", "", Sys.Date()),"completedata_SHOTGUN_ALL.csv"))
library("readr")
library("missMDA")
library("missForest")
#Shotgun
alldata <- read_csv("2_incremental/20220420_STANDING_CROP.csv")
alldata$SAMPLING_DATE<-as.Date(alldata$SAMPLING_DATE, format = "%m/%d/%Y")
names(alldata)
mydata <- data.frame(alldata[ ,c(3:49)])
mydata <- mydata[complete.cases(mydata), ]
mydata <- filter(mydata, FIELD.REP %in% c(1:5))
mydata$SITE <- as.factor(mydata$SITE)
mydata$SAMPLING_DATE <- as.numeric(mydata$SAMPLING_DATE)
mydata <- mydata[which(mydata$SAMPLE_DESCRIPTOR == "EPIL"| mydata$SAMPLE_DESCRIPTOR == "EPIP" | mydata$SAMPLE_DESCRIPTOR == "FILA"),]
mydata$SITE_DISTANCE <- as.numeric(str_replace_all(mydata$SITE, c("WS"="0","DL"="44.9","GR"="64.82","GC"="89.22","BG"="144.32","BN"="167.82")))
mydata$SAMPLE_DESCRIPTOR <- as.factor(mydata$SAMPLE_DESCRIPTOR)
mydata$FIELD.REP<- as.factor(mydata$FIELD.REP)
sum(is.na(mydata))/prod(dim(mydata))
names(mydata)
z_scores <- as.data.frame(sapply(mydata[,c(5:47)], function(mydata) (abs(mydata-mean(mydata))/sd(mydata))))
mydata <- mydata[!rowSums(z_scores>2.5), ]
mydata_05<-data.frame(mydata)
mydata_05$As <- replace(mydata_05$As , sample(seq_along(mydata_05$As), 35), NA)
#mydata_05 <- data.frame(sapply(mydata_05, \(x) replace(x, sample(seq_along(x), 3), NA)))
sum(is.na(mydata_05$As))/length(mydata_05$As)
mydata_miss_imp_05 <- missForest(mydata_05, xtrue = mydata, verbose = TRUE, replace = T)
mydata_miss_imp_05$ximp$As
setdiff(mydata_miss_imp_05$ximp$As, mydata$As)
setdiff(mydata$As, mydata_miss_imp_05$ximp$As)
LM_05<-lm(setdiff(mydata_miss_imp_05$ximp$As, mydata$As) ~ setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
summary(LM_05)
plot(setdiff(mydata_miss_imp_05$ximp$As, mydata$As), setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
sum(is.na(mydata_05$As))/length(mydata_05$As)
#write.csv(mydata_miss_imp$ximp, paste0("2_incremental/PCA_INPUT_TEST/",gsub("-", "", Sys.Date()),"completedata_SHOTGUN_ALL.csv"))
library("readr")
library("missMDA")
library("missForest")
#Shotgun
alldata <- read_csv("2_incremental/20220420_STANDING_CROP.csv")
alldata$SAMPLING_DATE<-as.Date(alldata$SAMPLING_DATE, format = "%m/%d/%Y")
names(alldata)
mydata <- data.frame(alldata[ ,c(3:49)])
mydata <- mydata[complete.cases(mydata), ]
mydata <- filter(mydata, FIELD.REP %in% c(1:5))
mydata$SITE <- as.factor(mydata$SITE)
mydata$SAMPLING_DATE <- as.numeric(mydata$SAMPLING_DATE)
mydata <- mydata[which(mydata$SAMPLE_DESCRIPTOR == "EPIL"| mydata$SAMPLE_DESCRIPTOR == "EPIP" | mydata$SAMPLE_DESCRIPTOR == "FILA"),]
mydata$SITE_DISTANCE <- as.numeric(str_replace_all(mydata$SITE, c("WS"="0","DL"="44.9","GR"="64.82","GC"="89.22","BG"="144.32","BN"="167.82")))
mydata$SAMPLE_DESCRIPTOR <- as.factor(mydata$SAMPLE_DESCRIPTOR)
mydata$FIELD.REP<- as.factor(mydata$FIELD.REP)
sum(is.na(mydata))/prod(dim(mydata))
names(mydata)
z_scores <- as.data.frame(sapply(mydata[,c(5:47)], function(mydata) (abs(mydata-mean(mydata))/sd(mydata))))
mydata <- mydata[!rowSums(z_scores>2.5), ]
mydata_05<-data.frame(mydata)
mydata_05$As <- replace(mydata_05$As , sample(seq_along(mydata_05$As), 35), NA)
#mydata_05 <- data.frame(sapply(mydata_05, \(x) replace(x, sample(seq_along(x), 3), NA)))
sum(is.na(mydata_05$As))/length(mydata_05$As)
mydata_miss_imp_05 <- missForest(mydata_05, xtrue = mydata, verbose = TRUE, replace = T)
mydata_miss_imp_05$ximp$As
setdiff(mydata_miss_imp_05$ximp$As, mydata$As)
setdiff(mydata$As, mydata_miss_imp_05$ximp$As)
LM_05<-lm(setdiff(mydata_miss_imp_05$ximp$As, mydata$As) ~ setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
summary(LM_05)
plot(setdiff(mydata_miss_imp_05$ximp$As, mydata$As), setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
sum(is.na(mydata_05$As))/length(mydata_05$As)
#write.csv(mydata_miss_imp$ximp, paste0("2_incremental/PCA_INPUT_TEST/",gsub("-", "", Sys.Date()),"completedata_SHOTGUN_ALL.csv"))
library("readr")
library("missMDA")
library("missForest")
#Shotgun
alldata <- read_csv("2_incremental/20220420_STANDING_CROP.csv")
alldata$SAMPLING_DATE<-as.Date(alldata$SAMPLING_DATE, format = "%m/%d/%Y")
names(alldata)
mydata <- data.frame(alldata[ ,c(3:49)])
mydata <- mydata[complete.cases(mydata), ]
mydata <- filter(mydata, FIELD.REP %in% c(1:5))
mydata$SITE <- as.factor(mydata$SITE)
mydata$SAMPLING_DATE <- as.numeric(mydata$SAMPLING_DATE)
mydata <- mydata[which(mydata$SAMPLE_DESCRIPTOR == "EPIL"| mydata$SAMPLE_DESCRIPTOR == "EPIP" | mydata$SAMPLE_DESCRIPTOR == "FILA"),]
mydata$SITE_DISTANCE <- as.numeric(str_replace_all(mydata$SITE, c("WS"="0","DL"="44.9","GR"="64.82","GC"="89.22","BG"="144.32","BN"="167.82")))
mydata$SAMPLE_DESCRIPTOR <- as.factor(mydata$SAMPLE_DESCRIPTOR)
mydata$FIELD.REP<- as.factor(mydata$FIELD.REP)
sum(is.na(mydata))/prod(dim(mydata))
names(mydata)
z_scores <- as.data.frame(sapply(mydata[,c(5:47)], function(mydata) (abs(mydata-mean(mydata))/sd(mydata))))
mydata <- mydata[!rowSums(z_scores>2.5), ]
mydata_05<-data.frame(mydata)
mydata_05$As <- replace(mydata_05$As , sample(seq_along(mydata_05$As), 35), NA)
#mydata_05 <- data.frame(sapply(mydata_05, \(x) replace(x, sample(seq_along(x), 3), NA)))
sum(is.na(mydata_05$As))/length(mydata_05$As)
mydata_miss_imp_05 <- missForest(mydata_05, xtrue = mydata, verbose = TRUE, replace = T)
mydata_miss_imp_05$ximp$As
setdiff(mydata_miss_imp_05$ximp$As, mydata$As)
setdiff(mydata$As, mydata_miss_imp_05$ximp$As)
LM_05<-lm(setdiff(mydata_miss_imp_05$ximp$As, mydata$As) ~ setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
summary(LM_05)
plot(setdiff(mydata_miss_imp_05$ximp$As, mydata$As), setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
sum(is.na(mydata_05$As))/length(mydata_05$As)
#write.csv(mydata_miss_imp$ximp, paste0("2_incremental/PCA_INPUT_TEST/",gsub("-", "", Sys.Date()),"completedata_SHOTGUN_ALL.csv"))
library("readr")
library("missMDA")
library("missForest")
#Shotgun
alldata <- read_csv("2_incremental/20220420_STANDING_CROP.csv")
alldata$SAMPLING_DATE<-as.Date(alldata$SAMPLING_DATE, format = "%m/%d/%Y")
names(alldata)
mydata <- data.frame(alldata[ ,c(3:49)])
mydata <- mydata[complete.cases(mydata), ]
mydata <- filter(mydata, FIELD.REP %in% c(1:5))
mydata$SITE <- as.factor(mydata$SITE)
mydata$SAMPLING_DATE <- as.numeric(mydata$SAMPLING_DATE)
mydata <- mydata[which(mydata$SAMPLE_DESCRIPTOR == "EPIL"| mydata$SAMPLE_DESCRIPTOR == "EPIP" | mydata$SAMPLE_DESCRIPTOR == "FILA"),]
mydata$SITE_DISTANCE <- as.numeric(str_replace_all(mydata$SITE, c("WS"="0","DL"="44.9","GR"="64.82","GC"="89.22","BG"="144.32","BN"="167.82")))
mydata$SAMPLE_DESCRIPTOR <- as.factor(mydata$SAMPLE_DESCRIPTOR)
mydata$FIELD.REP<- as.factor(mydata$FIELD.REP)
sum(is.na(mydata))/prod(dim(mydata))
names(mydata)
z_scores <- as.data.frame(sapply(mydata[,c(5:47)], function(mydata) (abs(mydata-mean(mydata))/sd(mydata))))
mydata <- mydata[!rowSums(z_scores>2.5), ]
mydata_05<-data.frame(mydata)
mydata_05$As <- replace(mydata_05$As , sample(seq_along(mydata_05$As), 35), NA)
#mydata_05 <- data.frame(sapply(mydata_05, \(x) replace(x, sample(seq_along(x), 3), NA)))
sum(is.na(mydata_05$As))/length(mydata_05$As)
mydata_miss_imp_05 <- missForest(mydata_05, xtrue = mydata, verbose = TRUE, replace = T)
mydata_miss_imp_05$ximp$As
setdiff(mydata_miss_imp_05$ximp$As, mydata$As)
setdiff(mydata$As, mydata_miss_imp_05$ximp$As)
LM_05<-lm(setdiff(mydata_miss_imp_05$ximp$As, mydata$As) ~ setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
summary(LM_05)
plot(setdiff(mydata_miss_imp_05$ximp$As, mydata$As), setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
sum(is.na(mydata_05$As))/length(mydata_05$As)
#write.csv(mydata_miss_imp$ximp, paste0("2_incremental/PCA_INPUT_TEST/",gsub("-", "", Sys.Date()),"completedata_SHOTGUN_ALL.csv"))
library("readr")
library("missMDA")
library("missForest")
#Shotgun
alldata <- read_csv("2_incremental/20220420_STANDING_CROP.csv")
alldata$SAMPLING_DATE<-as.Date(alldata$SAMPLING_DATE, format = "%m/%d/%Y")
names(alldata)
mydata <- data.frame(alldata[ ,c(3:49)])
mydata <- mydata[complete.cases(mydata), ]
mydata <- filter(mydata, FIELD.REP %in% c(1:5))
mydata$SITE <- as.factor(mydata$SITE)
mydata$SAMPLING_DATE <- as.numeric(mydata$SAMPLING_DATE)
mydata <- mydata[which(mydata$SAMPLE_DESCRIPTOR == "EPIL"| mydata$SAMPLE_DESCRIPTOR == "EPIP" | mydata$SAMPLE_DESCRIPTOR == "FILA"),]
mydata$SITE_DISTANCE <- as.numeric(str_replace_all(mydata$SITE, c("WS"="0","DL"="44.9","GR"="64.82","GC"="89.22","BG"="144.32","BN"="167.82")))
mydata$SAMPLE_DESCRIPTOR <- as.factor(mydata$SAMPLE_DESCRIPTOR)
mydata$FIELD.REP<- as.factor(mydata$FIELD.REP)
sum(is.na(mydata))/prod(dim(mydata))
names(mydata)
z_scores <- as.data.frame(sapply(mydata[,c(5:47)], function(mydata) (abs(mydata-mean(mydata))/sd(mydata))))
mydata <- mydata[!rowSums(z_scores>2.5), ]
mydata_05<-data.frame(mydata)
mydata_05$As <- replace(mydata_05$As , sample(seq_along(mydata_05$As), 35), NA)
#mydata_05 <- data.frame(sapply(mydata_05, \(x) replace(x, sample(seq_along(x), 3), NA)))
sum(is.na(mydata_05$As))/length(mydata_05$As)
mydata_miss_imp_05 <- missForest(mydata_05, xtrue = mydata, verbose = TRUE, replace = T)
mydata_miss_imp_05$ximp$As
setdiff(mydata_miss_imp_05$ximp$As, mydata$As)
setdiff(mydata$As, mydata_miss_imp_05$ximp$As)
LM_05<-lm(setdiff(mydata_miss_imp_05$ximp$As, mydata$As) ~ setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
summary(LM_05)
plot(setdiff(mydata_miss_imp_05$ximp$As, mydata$As), setdiff(mydata$As, mydata_miss_imp_05$ximp$As))
sum(is.na(mydata_05$As))/length(mydata_05$As)
#write.csv(mydata_miss_imp$ximp, paste0("2_incremental/PCA_INPUT_TEST/",gsub("-", "", Sys.Date()),"completedata_SHOTGUN_ALL.csv"))
library(readr)
FINAL_PARTIAL_REDUX <- read_csv("0_data/icp_ms_partial/FINAL_PARTIAL_REDUX.csv")
FINAL_PARTIAL_REDUX <- read.csv("0_data/icp_ms_partial/FINAL_PARTIAL_REDUX.csv")
FINAL_PARTIAL_REDUX
library(readr)
library(tidyr)
library(zoo)
library(dplyr)
names(FINAL_PARTIAL_REDUX)
c(1:3)
df2<-FINAL_PARTIAL_REDUX[,(c(1:3)c(6:15))]
df2<-FINAL_PARTIAL_REDUX[,(c(1:3),c(6:15))]
df2<-FINAL_PARTIAL_REDUX[,(c(1:3,6:15))]
df2
test3 <-aggregate(x = df2[ ,colnames(df2) != c("Date","Site ","Fraction")],             # Sum by group
by = list(df2$Date,df2$Site,df2$Fraction),
FUN = mean,
na.rm = TRUE)
colnames(df2)
df2
list(df2$Date,df2$Site,df2$Fraction)
test3 <-aggregate(x = df2[ ,colnames(df2) != c("Date","Site ","Fraction")],             # Sum by group
by = list(df2$Date,df2$Site,df2$Fraction),
FUN = mean,
na.rm = TRUE)
test3 <-aggregate(x = df2[ ,colnames(df2) != c("Date","Site ","Fraction")],             # Sum by group
by = list(df2$Date,df2$Site,df2$Fraction),
FUN = mean,
na.rm = F)
df2[,colnames(df2) != c("Date","Site ","Fraction")]
test3 <-aggregate(x = df2[,colnames(df2) != c("Date","Site","Fraction")],             # Sum by group
by = list(df2$Date,df2$Site,df2$Fraction),
FUN = mean,
na.rm = F)
df2[,colnames(df2) != c("Date","Site","Fraction")]
df2$Site
df2$Fraction
df2$Date
df2[,colnames(df2) != c("Date","Site","Fraction")]
test3
df3 <-aggregate(x = df2[,colnames(df2) != c("Date","Site","Fraction")],             # Sum by group
by = list(df2$Date,df2$Site,df2$Fraction),
FUN = mean,
na.rm = F)
df3
write.csv(df3, "2_incremental/water1.csv")
df3 <-aggregate(x = df2[,colnames(df2) != c("Date","Site","Fraction")],             # Sum by group
by = list(df2$Date,df2$Site,df2$Fraction),
FUN = mean,
na.rm = F)
SIZE_FRACTIONS <- read.csv("0_data/icp_ms_partial/water2.csv")
SIZE_FRACTIONS <- read.csv("2_incremental/water2.csv")
SIZE_FRACTIONS[SIZE_FRACTIONS < 0] <- 0
SIZE_FRACTIONS
names(SIZE_FRACTIONS)
5-19
19-33
SIZE_FRACTIONS <- read.csv("2_incremental/water2.csv")
SIZE_FRACTIONS[SIZE_FRACTIONS < 0] <- 0
names(SIZE_FRACTIONS)
PF<-SIZE_FRACTIONS[,5]-SIZE_FRACTIONS[,18]-SIZE_FRACTIONS[,31]
PF
PF<-SIZE_FRACTIONS[,5]-(SIZE_FRACTIONS[,18]+SIZE_FRACTIONS[,31])
PF
PF<-SIZE_FRACTIONS[,5]-(SIZE_FRACTIONS[,18])
PF
PS<-SIZE_FRACTIONS[,5]  -(SIZE_FRACTIONS[,18])
PC<-SIZE_FRACTIONS[,18] -(SIZE_FRACTIONS[,31])
PS<-SIZE_FRACTIONS[,5]  -(SIZE_FRACTIONS[,18])
PC<-SIZE_FRACTIONS[,18] -(SIZE_FRACTIONS[,31])
PD<-(SIZE_FRACTIONS[,31]
PD
PD<-SIZE_FRACTIONS[,31]
PD
18-31
names(SIZE_FRACTIONS)
}
for(i in SIZE_FRACTIONS[,c(5:14)]){
S1<- SIZE_FRACTIONS[,i]  -SIZE_FRACTIONS[,i+13]
}
for(i in SIZE_FRACTIONS[,c(5:14)]){
S1<- SIZE_FRACTIONS[i]  -SIZE_FRACTIONS[i+13]
}
for(i in colnames(SIZE_FRACTIONS[,c(5:14)])){
S1<- SIZE_FRACTIONS[i]  -SIZE_FRACTIONS[i+13]
}
for(i in colnames(SIZE_FRACTIONS[,c(5:14)])){
S1<- SIZE_FRACTIONS[,i]  -SIZE_FRACTIONS[,i+13]
}
SIZE_FRACTIONS[,c(5:14)]
for(i in c(5:14)){
S1<- SIZE_FRACTIONS[,i] - SIZE_FRACTIONS[,i+13]
}
S1
for(i in SIZE_FRACTIONS[,c(5:14)]){
S1<- SIZE_FRACTIONS[,i] - SIZE_FRACTIONS[,i+13]
}
SIZE_FRACTIONS[,c(5:14)]
names(SIZE_FRACTIONS)
SIZE_FRACTIONS[,i] - SIZE_FRACTIONS[,i+13]
i=1
SIZE_FRACTIONS[,i] - SIZE_FRACTIONS[,i+13]
for(i in 5:14){
S1<- SIZE_FRACTIONS[,i] - SIZE_FRACTIONS[,i+13]
}
S1
for(i in 5:14){
S1[i]<- SIZE_FRACTIONS[,i] - SIZE_FRACTIONS[,i+13]
}
S1
for(i in 5:14){
S1[,i]<- SIZE_FRACTIONS[,i] - SIZE_FRACTIONS[,i+13]
}
S1
S1<-data.frame(SIZE_FRACTIONS[,c(1:3)])
S1
S1
S1<-data.frame(SIZE_FRACTIONS[,c(2:4)])
S1
S1<-data.frame(SIZE_FRACTIONS[,c(2:3)])
for(i in 5:14){
S1[,i-13]<- SIZE_FRACTIONS[,i] - SIZE_FRACTIONS[,i+13]
S1[,i]<- SIZE_FRACTIONS[,i+13] - SIZE_FRACTIONS[,i+26]
S1[,i+13]<- SIZE_FRACTIONS[,i+26]
}
S1
S1<-data.frame(SIZE_FRACTIONS[,c(2:3)])
for(i in 5:14){
S1[,i-9]<- SIZE_FRACTIONS[,i] - SIZE_FRACTIONS[,i+13]
S1[,i]<- SIZE_FRACTIONS[,i+13] - SIZE_FRACTIONS[,i+26]
S1[,i+13]<- SIZE_FRACTIONS[,i+26]
}
for(i in 5:14){
S1[,i-9]<- SIZE_FRACTIONS[,i] - SIZE_FRACTIONS[,i+13]
}
i
FINAL_PARTIAL_REDUX <- read.csv("0_data/icp_ms_partial/FINAL_PARTIAL_REDUX.csv")
names(FINAL_PARTIAL_REDUX)
df2<-FINAL_PARTIAL_REDUX[,(c(1:3,6:15))]
df3 <-aggregate(x = df2[,colnames(df2) != c("Date","Site","Fraction")],             # Sum by group
by = list(df2$Date,df2$Site,df2$Fraction),
FUN = mean,
na.rm = F)
write.csv(df3, "2_incremental/water1.csv")
SIZE_FRACTIONS <- read.csv("2_incremental/water2.csv")
SIZE_FRACTIONS[SIZE_FRACTIONS < 0] <- 0
names(SIZE_FRACTIONS)
PS<-SIZE_FRACTIONS[,5]  -(SIZE_FRACTIONS[,18])
PC<-SIZE_FRACTIONS[,18] -(SIZE_FRACTIONS[,31])
PD<-SIZE_FRACTIONS[,31]
PS
S1
S1<-data.frame(SIZE_FRACTIONS[,c(2:3)])
S1
for(i in 5:14){
S1[,i-2]<- SIZE_FRACTIONS[,i] - SIZE_FRACTIONS[,i+13]
}
S1
for(i in 5:14){
S1[,i-2]<- SIZE_FRACTIONS[,i] - SIZE_FRACTIONS[,i+13]
S1[,i+8]<- SIZE_FRACTIONS[,i+13] - SIZE_FRACTIONS[,i+26]
}
S1
for(i in 5:14){
S1[,i-2]<- SIZE_FRACTIONS[,i] - SIZE_FRACTIONS[,i+13]
S1[,i+8]<- SIZE_FRACTIONS[,i+13] - SIZE_FRACTIONS[,i+26]
S1[,i+18]<- SIZE_FRACTIONS[,i+26]
}
S1
write.csv(S1, "2_incremental/water3.csv")
names(SIZE_FRACTIONS)
PS<-SIZE_FRACTIONS[,5]  -(SIZE_FRACTIONS[,18])
PC<-SIZE_FRACTIONS[,18] -(SIZE_FRACTIONS[,31])
PD<-SIZE_FRACTIONS[,31]
PS
names(SIZE_FRACTIONS)
n=1
PS<-SIZE_FRACTIONS[,n]  -(SIZE_FRACTIONS[,n+13])
PC<-SIZE_FRACTIONS[,n+13] -(SIZE_FRACTIONS[,n+26])
PD<-SIZE_FRACTIONS[,n+26]
PS
PC
PD
S1
names(SIZE_FRACTIONS)
write.csv(S1, "2_incremental/water3.csv")
paste("Suspended", var_names, sep=" ")
var_names<-c("P","Ca","Fe","Cu","Zn","As","Se","Mo","Cd","Pb")
paste("Suspended", var_names, sep=" ")
paste("SS", var_names, sep=" ")
colnames(S1[,c(2:12)])
colnames(S1[,c(3:12)])
colnames(S1[,c(3:12)])<-paste("SS", var_names, sep=" ")
S1
colnames(S1[,c(3:12)])<-paste("SS", var_names, sep=" ")
S1
colnames(S1[,c(3:12)])
colnames(S1)[c(3:12)]
colnames(S1)[c(3:12)]<-paste("SS", var_names, sep=" ")
S1
colnames(S1)[c(13:22)]<-paste("CL", var_names, sep=" ")
colnames(S1)[c(23:32)]<-paste("CL", var_names, sep=" ")
write.csv(S1, "2_incremental/water3.csv")
write.csv(S1, "2_incremental/water3.csv")
colnames(S1)[c(23:32)]<-paste("TD", var_names, sep=" ")
write.csv(S1, "2_incremental/water3.csv")
colnames(S1)[c(23:32)]<-paste("TD", var_names, sep=" ")
TD
S1[S1 < 0] <- 0
write.csv(S1, "2_incremental/water3.csv")
