COMPARTMENTS <- alldata[which(alldata$SAMPLE_DESCRIPTOR == "EPIL"| alldata$SAMPLE_DESCRIPTOR == "EPIP" | alldata$SAMPLE_DESCRIPTOR == "FILA"),]
#COMPARTMENTS <- COMPARTMENTS[-217,]
COMPARTMENTS <- alldata[which(alldata$SAMPLE_DESCRIPTOR == "FILA"),]
COMPARTMENTS$SITE_DISTANCE<-c(WS=0,DL=44.9,GR=64.82,GC=89.22,BG=144.32,BN=167.82)[COMPARTMENTS$SITE]
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49))]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(Cd ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
## add predicted values (on response scale) to prediction frame
pframe$Cd <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Cd, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
#dev.new()
plot2 + facet_grid( ~ SITE)
COMPARTMENTS <- alldata[which(alldata$SAMPLE_DESCRIPTOR == "EPIL"| alldata$SAMPLE_DESCRIPTOR == "EPIP" | alldata$SAMPLE_DESCRIPTOR == "FILA"),]
COMPARTMENTS$SITE_DISTANCE<-c(WS=0,DL=44.9,GR=64.82,GC=89.22,BG=144.32,BN=167.82)[COMPARTMENTS$SITE]
names(COMPARTMENTS)
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49))]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(Cd ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
## add predicted values (on response scale) to prediction frame
pframe$Cd <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Cd, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
#dev.new()
plot2 + facet_grid( ~ SITE)
mix.int <- glm(Zn ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
mix.int <- glm(Znr ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
## add predicted values (on response scale) to prediction frame
pframe$Cd <- predict(mix.int,newdata=pframe,type="response")
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
## add predicted values (on response scale) to prediction frame
pframe$Zn <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Zn, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
#dev.new()
plot2 + facet_grid( ~ SITE)
mix.int <- glm(Znr ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
## add predicted values (on response scale) to prediction frame
pframe$Znr <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Znr, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
#dev.new()
plot2 + facet_grid( ~ SITE)
mix.int <- glm(Pb ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
## add predicted values (on response scale) to prediction frame
pframe$Pb <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Pb, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
#dev.new()
plot2 + facet_grid( ~ SITE)
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49)+39)]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(Pb ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
mix.int <- glm(Pb.1 ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
## add predicted values (on response scale) to prediction frame
pframe$Pb.1 <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Pb.1, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
#dev.new()
plot2 + facet_grid( ~ SITE)
alldata <- read_csv("2_incremental/20220420_STANDING_CROP_Rafa_Interpolation_Dont_Use.csv")
alldata$SAMPLING_DATE<-as.Date(alldata$SAMPLING_DATE, format = "%m/%d/%Y")
EPIL <- alldata[which(alldata$SAMPLE_DESCRIPTOR == "EPIL"),]
EPIL$SITE_DISTANCE<-c(WS=0,DL=44.9,GR=64.82,GC=89.22,BG=144.32,BN=167.82)[EPIL$SITE]
BIG5.LABELS<-as.data.frame(na.omit(EPIL[,c(c(3,4,6,89),c(13,19,22,25,35,40,49)+39)]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
colnames(BIG5.LABELS[5:11])<-c("As","Cd","Cu","Fe","Pb","Se","Zn")
BIG5.GLM<-BIG5.LABELS
BIG5.DF[,c(7)]
alldata <- read_csv("2_incremental/20220420_STANDING_CROP_Rafa_Interpolation_Dont_Use.csv")
alldata$SAMPLING_DATE<-as.Date(alldata$SAMPLING_DATE, format = "%m/%d/%Y")
COMPARTMENTS <- alldata[which(alldata$SAMPLE_DESCRIPTOR == "EPIL"| alldata$SAMPLE_DESCRIPTOR == "EPIP" | alldata$SAMPLE_DESCRIPTOR == "FILA"),]
COMPARTMENTS <- alldata[which(alldata$SAMPLE_DESCRIPTOR == "FILA"),]
COMPARTMENTS <- alldata[which(alldata$SAMPLE_DESCRIPTOR == "EPIL"| alldata$SAMPLE_DESCRIPTOR == "EPIP" | alldata$SAMPLE_DESCRIPTOR == "FILA"),]
COMPARTMENTS$SITE_DISTANCE<-c(WS=0,DL=44.9,GR=64.82,GC=89.22,BG=144.32,BN=167.82)[COMPARTMENTS$SITE]
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49)+39)]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(log(As+1) ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian(link="log"))
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
pframe$As <- predict(mix.int,newdata=pframe,type="response")
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
ggplot(BIG5.GLM, aes(SAMPLING_DATE, As, col = SITE))+
geom_point() +
#  scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = FALSE,
method.args = list(family = "log"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
mix.int <- glm(Pb.1 ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
pframe$Pb.1 <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Pb.1, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
plot2 + facet_grid( ~ SITE)
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49))]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49))]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(Pb.1 ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
levels(BIG5.GLM$SITE)
pframe$Pb <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Pb, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
plot2 + facet_grid( ~ SITE)
mix.int <- glm(Pb ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
## add predicted values (on response scale) to prediction frame
pframe$Pb <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Pb, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
#dev.new()
plot2 + facet_grid( ~ SITE)
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49))]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49))]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(Pb ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
## add predicted values (on response scale) to prediction frame
pframe$Pb <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Pb, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
#dev.new()
plot2 + facet_grid( ~ SITE)
mix.int <- glm(Se ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
pframe$Se <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Se, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
plot2 + facet_grid( ~ SITE)
summary(mix.int)
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49))]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(Se ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
## add predicted values (on response scale) to prediction frame
pframe$Se <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Se, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
#dev.new()
plot2 + facet_grid( ~ SITE)
COMPARTMENTS <- alldata[which(alldata$SAMPLE_DESCRIPTOR == "FILA"),]
COMPARTMENTS$SITE_DISTANCE<-c(WS=0,DL=44.9,GR=64.82,GC=89.22,BG=144.32,BN=167.82)[COMPARTMENTS$SITE]
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49))]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(Se ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
pframe$Se <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Se, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
plot2 + facet_grid( ~ SITE)
COMPARTMENTS <- alldata[which(alldata$SAMPLE_DESCRIPTOR == "EPIL"),]
COMPARTMENTS$SITE_DISTANCE<-c(WS=0,DL=44.9,GR=64.82,GC=89.22,BG=144.32,BN=167.82)[COMPARTMENTS$SITE]
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49))]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(Se ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
## add predicted values (on response scale) to prediction frame
pframe$Se <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Se, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
#dev.new()
plot2 + facet_grid( ~ SITE)
COMPARTMENTS <- alldata[which(alldata$SAMPLE_DESCRIPTOR == "EPIP"),]
COMPARTMENTS$SITE_DISTANCE<-c(WS=0,DL=44.9,GR=64.82,GC=89.22,BG=144.32,BN=167.82)[COMPARTMENTS$SITE]
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49))]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(log(As+1) ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian(link="log"))
mix.int <- glm(Se ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
pframe$Se <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Se, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
plot2 + facet_grid( ~ SITE)
mix.int <- glm(Se ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
COMPARTMENTS <- alldata[which(alldata$SAMPLE_DESCRIPTOR == "FILA"),]
COMPARTMENTS$SITE_DISTANCE<-c(WS=0,DL=44.9,GR=64.82,GC=89.22,BG=144.32,BN=167.82)[COMPARTMENTS$SITE]
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49))]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(Se ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
pframe$Se <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Se, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
plot2 + facet_grid( ~ SITE)
COMPARTMENTS <- alldata[which(alldata$SAMPLE_DESCRIPTOR == "FILA"),]
COMPARTMENTS$SITE_DISTANCE<-c(WS=0,DL=44.9,GR=64.82,GC=89.22,BG=144.32,BN=167.82)[COMPARTMENTS$SITE]
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49+39))]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(Se ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
pframe$Se <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, Se, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
plot2 + facet_grid( ~ SITE)
COMPARTMENTS <- alldata[which(alldata$SAMPLE_DESCRIPTOR == "EPIL"| alldata$SAMPLE_DESCRIPTOR == "EPIP" | alldata$SAMPLE_DESCRIPTOR == "FILA"),]
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49+39))]))
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(log(As+1) ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian(link="log"))
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(log(As+1) ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian(link="log"))
mix.int <- glm(As.1 ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
BIG5.GLM
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49+39))]))
BIG5.LABELS
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49)+39)]))
COMPARTMENTS <- alldata[which(alldata$SAMPLE_DESCRIPTOR == "EPIL"| alldata$SAMPLE_DESCRIPTOR == "EPIP" | alldata$SAMPLE_DESCRIPTOR == "FILA"),]
COMPARTMENTS$SITE_DISTANCE<-c(WS=0,DL=44.9,GR=64.82,GC=89.22,BG=144.32,BN=167.82)[COMPARTMENTS$SITE]
COMPARTMENTS$SITE_DISTANCE<-c(WS=0,DL=44.9,GR=64.82,GC=89.22,BG=144.32,BN=167.82)[COMPARTMENTS$SITE]
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49)+39)]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(As.1 ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
mix.int <- glm(As.1 ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
levels(BIG5.GLM$SITE)
BIG5.GLM$SITE <- factor(BIG5.GLM$SITE, levels = c("WS","DL","GR","GC","BG","BN"), ordered = TRUE)
## add predicted values (on response scale) to prediction frame
pframe$As.1 <- predict(mix.int,newdata=pframe,type="response")
plot2<- ggplot(BIG5.GLM, aes(SAMPLING_DATE, As.1, col = SITE))+
geom_point() +
#          scale_y_continuous(trans='log10')+
geom_smooth(method = "glm", se = TRUE,
method.args = list(family = "gaussian"), linetype = "dashed")+
geom_line(data=pframe)  ## use prediction data here
#dev.new()
plot2 + facet_grid( ~ SITE)
mix.int <- glm(log(As.1) ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
mix.int <- glm(log(As.1+1) ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
BIG5.LABELS<-as.data.frame(na.omit(COMPARTMENTS[,c(c(3,4,6,89),c(13,19,22,25,35,40,49)+39)]))
BIG5.LABELS$SITE<-factor(BIG5.LABELS$SITE)
#BIG5.LABELS<-BIG5.LABELS[order(BIG5.LABELS$SAMPLE_DESCRIPTOR, decreasing = F), ]
BIG5.DF<-as.data.frame(BIG5.LABELS[,c(5:ncol(BIG5.LABELS))])
names(BIG5.DF)<- c("As","Cd","Cu","Fe","Pb","Se","Zn")
names(BIG5.LABELS)
BIG5.GLM<-BIG5.LABELS
mix.int <- glm(log(As.1+1) ~ SAMPLING_DATE * SITE, data = BIG5.GLM,
family=gaussian)
summary(mix.int)
pframe <- with(BIG5.GLM,
expand.grid(SAMPLING_DATE=seq(min(SAMPLING_DATE),max(SAMPLING_DATE),length=51),
SITE=levels(SITE)))
mix.int
summary(mix.int)
